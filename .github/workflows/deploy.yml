name: Deploy Angular App to EC2

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: "18"
  APP_NAME: voltioapp

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless

      - name: Build application
        run: npm run build -- --configuration=production

      - name: Create deployment artifact
        run: |
          tar -czf voltio-build.tar.gz -C dist/${{ env.APP_NAME }} .

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: voltio-build
          path: voltio-build.tar.gz
          retention-days: 5

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: voltio-build

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Create backup of current deployment
            if [ -d "/var/www/voltio" ]; then
              sudo cp -r /var/www/voltio /var/www/voltio-backup-$(date +%Y%m%d_%H%M%S)
            fi

            # Create directory if it doesn't exist
            sudo mkdir -p /var/www/voltio

            # Clean current deployment
            sudo rm -rf /var/www/voltio/*

            # Set proper ownership
            sudo chown -R $USER:$USER /var/www/voltio

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: voltio-build.tar.gz
          target: /tmp/

      - name: Extract and setup files
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Extract files
            cd /tmp
            tar -xzf voltio-build.tar.gz -C /var/www/voltio/

            # Set proper permissions
            sudo chown -R www-data:www-data /var/www/voltio
            sudo chmod -R 755 /var/www/voltio

            # Reload Nginx
            sudo systemctl reload nginx

            # Clean up
            rm -f /tmp/voltio-build.tar.gz

            echo "Deployment completed successfully!"

  notify:
    needs: [build, deploy]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "✅ Deployment successful to https://voltio.acstree.xyz"
          else
            echo "❌ Deployment failed"
            exit 1
          fi
